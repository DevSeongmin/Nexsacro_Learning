<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Work" width="1080" height="720" titletext="Form_Work" onactivate="Form_Work_onactivate" onload="Form_Work_onload">
    <Layouts>
      <Layout width="1080" height="720" screenid="Desktop_screen">
        <Grid id="Grid00" taborder="0" left="210" top="89" width="600" height="620" binddataset="ds_employee">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="80"/>
                <Column size="55"/>
                <Column size="65"/>
                <Column size="97"/>
                <Column size="0"/>
                <Column size="63"/>
                <Column size="60"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="0"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="이름"/>
                <Cell col="1" text="성별"/>
                <Cell col="2" text="부서코드"/>
                <Cell col="3" text="부서"/>
                <Cell col="4" text="직급"/>
                <Cell col="5" text="직급 코드"/>
                <Cell col="6" text="직급"/>
                <Cell col="7" text="연봉"/>
                <Cell col="8" text="입사일"/>
                <Cell col="9" text="employeeId"/>
              </Band>
              <Band id="body">
                <Cell text="bind:employeeName"/>
                <Cell col="1" text="bind:gender"/>
                <Cell col="2" text="bind:departmenCode"/>
                <Cell col="3" text="bind:departmentName"/>
                <Cell col="4" text="bind:positionCode"/>
                <Cell col="5" text="bind:positionCode"/>
                <Cell col="6" text="bind:positionName"/>
                <Cell col="7" text="bind:salary"/>
                <Cell col="8" text="bind:hireDate"/>
                <Cell col="9" text="bind:employeeId"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid id="departmentGrid" taborder="1" left="40" top="90" width="130" height="619" binddataset="ds_department" cellclickbound="control" oncellclick="departmentGrid_oncellclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="0"/>
                <Column size="129"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="departmentId"/>
                <Cell col="1" text="부서"/>
              </Band>
              <Band id="body">
                <Cell text="bind:departmentId"/>
                <Cell col="1" text="bind:departmentName"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <ImageViewer id="LOGO" taborder="2" left="20" top="10" width="210" height="73" image="url('imagerc::JB_mark.png')" border="0px none" onclick="LOGO_onclick"/>
        <Button id="btn_deleteEmployee" taborder="3" text="직원삭제" left="670" top="40" width="124" height="35" onclick="btn_deleteEmployee_onclick"/>
        <Button id="btn_insert" taborder="4" text="직원입력" left="505" top="40" width="150" height="35" onclick="btn_insert_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_employee">
        <ColumnInfo>
          <Column id="employeeName" type="STRING" size="256"/>
          <Column id="gender" type="STRING" size="256"/>
          <Column id="departmenCode" type="STRING" size="256"/>
          <Column id="departmentName" type="STRING" size="256"/>
          <Column id="positionCode" type="STRING" size="256"/>
          <Column id="positionName" type="STRING" size="256"/>
          <Column id="salary" type="INT" size="256"/>
          <Column id="hireDate" type="TIME" size="256"/>
          <Column id="employeeId" type="BIGDECIMAL" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="employeeName">이성호</Col>
            <Col id="gender">F</Col>
            <Col id="departmenCode">MGT</Col>
            <Col id="departmentName">경영기획</Col>
            <Col id="positionCode">J1</Col>
            <Col id="positionName">주임</Col>
            <Col id="salary">115828127</Col>
            <Col id="hireDate">2014-11-21T00:00:00</Col>
            <Col id="employeeId">1</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_department">
        <ColumnInfo>
          <Column id="departmentId" type="BIGDECIMAL" size="256"/>
          <Column id="departmentName" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="departmentId">1</Col>
            <Col id="departmentName">경영기획</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[
this.Form_Work_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
//     this.transaction("getEmployees", 
// 		"BASE_URL::/api/v1/employee",
// 		"",
// 		"ds_employee=ds_employee",
// 		"",
// 		"fnCallback",
// 		true);
// 	
// 	this.transaction("getDepartments", 
// 		"BASE_URL::/api/v1/department",
// 		"",
// 		"ds_department=ds_department",
// 		"",
// 		"fnCallback",
// 		true);
};






this.departmentGrid_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
    var departmentName = this.ds_department.getColumn(e.row, "departmentName");
	trace(departmentName);
	if (departmentName == "전체"){
		this.ds_employee.filter("");
		return;
	}
    this.filterEmployeesByDepartment(departmentName);
};

// 직원 필터링 함수 (부서 이름으로 필터링)
this.filterEmployeesByDepartment = function(departmentName)
{
    this.ds_employee.filter("departmentName == '" + departmentName + "'");
    trace("선택된 부서: " + departmentName + ", 필터링된 직원 수: " + this.ds_employee.getRowCount());
    
    // 직원 그리드 갱신 (직원 그리드의 ID가 Grid_Employee라고 가정)
    if (this.Grid_Employee) {
        this.Grid_Employee.redraw();
    }
};



// 직원 삭제 함수
this.deleteEmployee = function(employeeId)
{
    var strSvcId = "deleteEmployee";
    var strSvcUrl = "BASE_URL::api/v1/employee/" + employeeId;
    var strArg  = "";
    var strCallbackFunc = "fnCallback";
    var bAsync = true;

    this.transaction(strSvcId, strSvcUrl, "", "", strArg, strCallbackFunc, bAsync, "DELETE");
};


this.btn_deleteEmployee_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nRow = this.ds_employee.rowposition;
    if (nRow < 0) {
        alert("삭제할 행을 선택하세요.");
        return;
    }

    var employeeId = this.ds_employee.getColumn(nRow, "employeeId");

    if (confirm("정말로 삭제하시겠습니까?")) {
        this.deleteEmployee(employeeId);
    }
};




this.fnCallback = function(svcID, errCD, errMSG)
{
    if (errCD < 0) {
        this.alert("에러: " + errMSG);
        return;
    }
    
    if (svcID == "getEmployees") {
        trace("부서 데이터 수신 성공: " + this.ds_employee.getRowCount() + "건");
    }
	
	
	if (svcID == "getDepartments") {
        trace("직원 데이터 수신 성공: " + this.ds_department.getRowCount() + "건");
    }
	
	if (svcID == "deleteEmployee") {
        var nRow = this.ds_employee.rowposition;
        this.ds_employee.deleteRow(nRow);
        this.alert("삭제되었습니다.");
    }
};







this.btn_insert_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
    var objChildFrame = new ChildFrame();
    
    objChildFrame.init("popup_insert_employee"  // 팝업 ID
                      , 0  // x 좌표
                      , 0  // y 좌표
                      , 400  // 너비
                      , 300  // 높이
                      , null 
                      , null
                      , "FrameBase::popup_insert_employee.xfdl");  // 팝업 내용 파일 경로

    objChildFrame.set_openalign("center middle");  // 화면 중앙에 팝업 위치
    objChildFrame.set_dragmovetype("all");  // 팝업 창 이동 가능하게 설정
    
    objChildFrame.showModal(this.getOwnerFrame()
                           , null
                           , this
                           , "fn_popupCallback");
						   
				   
};





this.Form_Work_onactivate = function(obj:nexacro.Form,e:nexacro.ActivateEventInfo)
{

		
	    this.transaction("getEmployees", 
		"BASE_URL::/api/v1/employee",
		"",
		"ds_employee=ds_employee",
		"",
		"fnCallback",
		true);
	
	this.transaction("getDepartments", 
		"BASE_URL::/api/v1/department",
		"",
		"ds_department=ds_department",
		"",
		"fnCallback",
		true);
};
]]></Script>
  </Form>
</FDL>
